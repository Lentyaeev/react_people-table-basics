{"version":3,"sources":["components/Navbar/Navbar.tsx","components/Pages/HomePage.tsx","api.ts","components/LinkToPerson.tsx","components/Loader/Loader.tsx","components/Pages/PeoplePage/PeoplePage.tsx","App.tsx","index.tsx"],"names":["activeLink","isActive","NavBar","className","role","to","HomePage","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","LinkToPerson","person","onSelectedPerson","slug","sex","onClick","name","Loader","PeoplePage","useState","people","setPeople","selectedPerson","setSelectedPerson","error","setError","useEffect","res","catch","findRelatives","useCallback","find","preparedPeople","useMemo","map","mother","motherName","father","fatherName","length","href","born","died","App","path","element","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.9aadd51e.chunk.js","sourcesContent":["import { NavLink } from 'react-router-dom';\n\nconst activeLink = ({ isActive } : { isActive: boolean }) => {\n  return isActive ? 'navbar-item has-background-grey-lighter' : 'navbar-item';\n};\n\nexport const NavBar: React.FC = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            className={activeLink}\n            to=\"/\"\n          >\n            Home\n          </NavLink>\n\n          <NavLink\n            className={activeLink}\n            to=\"/people\"\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","export default function HomePage() {\n  return (\n    <h1 className=\"title\">Home Page</h1>\n  );\n}\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../types';\n\ntype Props = {\n  person: Person,\n  onSelectedPerson: (_:string) => void;\n};\n\nexport const LinkToPerson:React.FC<Props> = ({ person, onSelectedPerson }) => {\n  return (\n    <Link\n      to={`/people/${person.slug}`}\n      className={person.sex === 'f' ? 'has-text-danger' : ''}\n      onClick={() => onSelectedPerson(person.slug)}\n    >\n      {person.name}\n    </Link>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import {\n  useCallback, useEffect, useMemo, useState,\n} from 'react';\nimport { getPeople } from '../../../api';\nimport { Person } from '../../../types';\nimport { LinkToPerson } from '../../LinkToPerson';\nimport { Loader } from '../../Loader';\n\nexport default function PeoplePage() {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [selectedPerson, setSelectedPerson] = useState('');\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    getPeople().then((res) => {\n      setPeople(res);\n    }).catch(() => setError('Failed to load people'));\n  });\n\n  const findRelatives = useCallback((name: string | null) => (\n    name ? people.find(person => person.name === name) : null\n  ), [people]);\n\n  const preparedPeople = useMemo<Person[]>(() => (\n    people.map(person => ({\n      ...person,\n      mother: findRelatives(person.motherName),\n      father: findRelatives(person.fatherName),\n    }))\n  ), [people]);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n      {error && <h1 className=\"has-text-danger\">{error}</h1>}\n      {people.length === 0 && <Loader />}\n      <table\n        data-cy=\"peopleTable\"\n        className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n      >\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Sex</th>\n            <th>Born</th>\n            <th>Died</th>\n            <th>Mother</th>\n            <th>Father</th>\n          </tr>\n        </thead>\n        <tbody>\n          {preparedPeople.map(person => (\n            <tr\n              data-cy=\"person\"\n              className={person.slug === selectedPerson\n                ? 'has-background-warning' : ''}\n            >\n              <td>\n                <a\n                  href={`#/people/${person.slug}`}\n                  className={person.sex === 'f' ? 'has-text-danger' : ''}\n                  onClick={() => setSelectedPerson(person.slug)}\n                >\n                  {person.name}\n                </a>\n              </td>\n\n              <td>{person.sex}</td>\n              <td>{person.born}</td>\n              <td>{person.died}</td>\n              <td>\n                {person.mother\n                  ? (\n                    <LinkToPerson\n                      person={person.mother}\n                      onSelectedPerson={setSelectedPerson}\n                    />\n                  )\n                  : person.motherName}\n              </td>\n              <td>\n                {person.father\n                  ? (\n                    <LinkToPerson\n                      person={person.father}\n                      onSelectedPerson={setSelectedPerson}\n                    />\n                  )\n                  : person.fatherName}\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </>\n  );\n}\n","import { Routes, Route, Navigate } from 'react-router-dom';\nimport { NavBar } from './components/Navbar/Navbar';\nimport HomePage from './components/Pages/HomePage';\nimport PeoplePage from './components/Pages/PeoplePage/PeoplePage';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <NavBar />\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"/\" element={<HomePage />} />\n          <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n          <Route path=\"people\" element={<PeoplePage />}>\n            <Route path=\":slug\" element={<PeoplePage />} />\n          </Route>\n          <Route path=\"*\" element={<h1 className=\"title\">Page Not Found</h1>} />\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}